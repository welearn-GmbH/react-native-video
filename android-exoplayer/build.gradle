apply plugin: 'com.android.library'

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

// uncomment below for dev
//repositories {
//    mavenCentral()
//    google()
//}

//buildscript {
//    repositories {
//        mavenCentral()
//        google()
//    }
//    dependencies {
//        classpath 'com.android.tools.build:gradle:7.0.3'
//        //classpath 'com.google.android.gms:strict-version-matcher-plugin:1.2.2'
//    }
//}

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 28)
    buildToolsVersion safeExtGet('buildToolsVersion', '28.0.3')

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 16)
        targetSdkVersion safeExtGet('targetSdkVersion', 28)
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation "com.facebook.react:react-native:${safeExtGet('reactNativeVersion', '+')}"
    implementation('com.google.android.exoplayer:exoplayer:2.17.1') {
        exclude group: 'com.android.support'
    }

    // All support libs must use the same version
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.core:core:1.1.0"
    implementation "androidx.media:media:1.1.0"

    implementation('com.google.android.exoplayer:extension-okhttp:2.17.1') {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
    implementation "com.squareup.okhttp3:okhttp:3.12.0"

}
